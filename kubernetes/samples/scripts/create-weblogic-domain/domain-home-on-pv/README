This sample has been enhanced to provide the ability for a user to introspect an already existing domain
(e.g. on-prem domain) using the WebLogic Deploy Tooling and then create the same domain on PV in Kubernetes using
this sample. The WDT Discover tool will generate a WDT model yaml (metadata representation of the domain configuration)
and a properties file properties file which will contain a key=value for each property in the WDT model.
The sample has been enhanced to update the domain using both the WDT Update and the WDT Extract Domain Resource Tools.

New functionality for the Domain Home on PV sample:
1- The create domain script will use the WDT Extract Domain Resource Tool to generate the domain CR yaml (domain.yaml).
2- The ability to update the domain on PV which was originally created as described above using WDT. The domain
   configuration will be updated by running WDT Update Tool using a WDT full model and the equivalent change to
   the Domain CR using the WDT Extract Domain Resource Tool.
3- The create and update domain will accept the following inputs: a WDT model, and the WDT properties file
    (e.g. generated during WDT discovery).

Note: You can still create the domain by updating the create-domain-inputs yaml file.

This sample has been modified to create a domain on PV and also to update the domain using the new WDT model.
The updateDomain is only to be used with domain created using WDT

Use case - WDT can be used to discover an domain (could be on-prem). Running wdt discover
domain script generates a property file and a model file. The customer could then update the 
input yaml file for operator specific inputs. 

An updateDomain.sh script has been added to the sample to update a domain as well as the domain resource if needed.

This sample can take both the input yaml file and the generated properties file as inputs to 
createDomain.sh and updateDomain.sh as a comma separated list.

When introspecting an existing domain with WDT the resulting model might need to be modified for compatibility with
specific target environments, such as Oracle Weblogic Server Kubernetes Operator. For more information,
see WDT documentation .

To create a domain using this sample -

   1. Invoke create-domain.sh -i  /path/to/directory/create-domain-inputs.yaml,/path/to/directory/properties-file
      -m /path/to/directory/users-wdt-model.yamlcreate-domain-inputs.yaml,xxxxx.properties -o outputdir -v
         The above command will create a domain on PV and also a domain.yaml file in outputdir/weblogic-domain/domainname
         The order of the input files does not matter.
   2. The domain.yaml generated by the WDT Extract Domain Resource Tool will have '--FIX ME--' statements for
      those values it can not generate. The user is expected to fill in the information identified by --FIX ME--
      in the domain resource output. Make sure the domain.yaml does not contain any '--FIX ME--' before proceeding
      to the next step.
   3. kubectl apply -f domain.yaml

To update a domain using this sample -

   2. Invoke update-domain.sh -i /path/to/directory/create-domain-inputs.yaml,/path/to/directory/properties-file
      -m /path/to/directory/users-wdt-model.yamlcreate-domain-inputs.yaml,xxxxx.properties -o outputdir1 -v
         The input files should be the same as the one that was used for creating the domain.
         The above command will update the weblogic domain (config.xml) and create a domain.yaml file in
         outputdir1/weblogic-domain/domainname
   3. The domain.yaml generated by the WDT Extract Domain Resource Tool will have '--FIX ME--' statements for those
      values it can not generate. The user is expected to fill in the information identified by --FIX ME-- in the
      domain resource output. Make sure the domain.yaml does not contain any '--FIX ME--' before proceeding to the
      next step.
      With Operator 3.0.1(?) the user needs to add a introspectVersion to their domain.yaml so that the Operator
      will roll the domain with the updates.
   4. Edit outputdir1/weblogic-domain/domainname/domain.yaml and add/update the following to the spec section
        introspectVersion: "2"
   5. kubectl apply -f domain.yaml
        The domain will be rolled and updates will be applied. Changes will be reflected in the WebLogic configuration.
