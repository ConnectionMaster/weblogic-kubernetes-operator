This sample has been modified to create a domain on pv and also to update the domain using the new WDT model.
The updateDomain is only to be used with domain created using WDT

Use case - WDT can be used to discover an domain (could be on-prem). Running wdt discover
domain script generates a property file and a model file. The customer could then update the 
input yaml file for operator specific inputs. 

An updateDomain.sh script has been added to the sample to update a domain as well as the domain resource if needed.

This sample can take both the input yaml file and the generated properties file as inputs to 
createDomain.sh and updateDomain.sh as a comma separated list.

Kubernetes section is added to the generated model file by the scripts and so both the create and update script
uses wdt to extract the domain to create domain.yaml

To create a domain using this sample -

   1. copy the generated model file to wdt directory and rename it wdt_model_dynamic.yaml for dynamic clusters
   2. ./create-domain.sh -i create-domain-inputs.yaml,xxxxx.properties -o outputdir -v 
         The above command will create a domain on pv and also a domain.yaml file in outputdir/weblogic-domain/domainname
         The order of the input files does not matter.
   3. Check the domain.yaml to make sure there is no FIX ME. If there are any FIX ME's it has to be fixed before proceeding 
         to the next step.
   4. kubectl apply -f domain.yaml

To update a domain using this sample -

   1. update the original model file with what is needed to be added and rename it wdt_model_dynamic.yaml for dynamic clusters
         and copy it into wdt directory
   2. ./update-domain.sh -i create-domain-inputs.yaml,xxxxx.properties -o outputdir1 -v 
         The above command will update the weblogic domain (config.xml) and create a domain.yaml file in outputdir1/weblogic-domain/domainname
   3. Check the domain.yaml to make sure there is no FIX ME. If there are any FIX ME's it has to be fixed before proceeding 
         to the next step.
   4. kubectl apply -f domain.yaml
   5. Edit the domain - kubectl edit domain domainName and add introspectVersion to the spec at the domain level example- introspectVersion: "2"
         The domain will be restarted and you shoudl see the resources that you added with the updateDomain command.

